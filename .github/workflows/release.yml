name: Release cctools-port

on:
  workflow_dispatch:

jobs:
  package_sdks:
    uses: ./.github/workflows/sdk.yml

  collect_sdks:
    name: Collect SDKs
    runs-on: ubuntu-latest
    needs: package_sdks
    outputs:
      RELEASE_VERSION: ${{ steps.get_release_version.outputs.RELEASE_VERSION }}
    steps:
      - uses: actions/checkout@v4

      - name: Get Release Version
        id: get_release_version
        run: |
          echo "RELEASE_VERSION=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

  build_cctools_port:
    name: Build cctools-port
    runs-on: ubuntu-latest
    needs:
      - package_sdks
      - collect_sdks
    strategy:
      fail-fast: false
      matrix:
        sdk_versions: ${{ fromJSON(needs.package_sdks.outputs.SDK_VERSIONS) }}
    steps:
      - uses: actions/checkout@v4

      - name: Download SDK
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.sdk_versions }}
          path: .

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@master
        with:
          version: 18
          directory: ${{ runner.temp }}/llvm

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            curl \
            clang \
            make \
            cmake \
            git \
            patch \
            python3 \
            libssl-dev \
            lzma-dev \
            libxml2-dev \
            xz-utils \
            bzip2 \
            cpio \
            bzip2 \
            zlib1g-dev \
            bash \
            llvm-dev \
            uuid-dev \
            g++

      - name: Build cctools-port
        id: build
        run: |
          export PATH=${{ env.LLVM_PATH }}/bin:$PATH
          mkdir -p dist
          version=$(echo ${{ matrix.sdk_versions }} | sed 's/^iPhoneOS-//;s/^iPhoneSimulator-//')
          export IPHONEOS_DEPLOYMENT_TARGET=5.0
          sed -i 's|echo iPhoneOS\*sdk|echo iPhone\*sdk|g' usage_examples/ios_toolchain/build.sh
          SDK_FILE="$PWD/$(echo ${{ matrix.sdk_versions }} | sed 's/-/./g').sdk.tar.xz"
          if [[ "${{ matrix.sdk_versions }}" == iPhoneSimulator* ]]; then
            bash usage_examples/ios_toolchain/build.sh "$SDK_FILE" armv7
            tar -zcf dist/cctools-port-${version}-armv7-linux-amd64.tar.xz -C usage_examples/ios_toolchain/target .
            rm -rf usage_examples/ios_toolchain/target
            bash usage_examples/ios_toolchain/build.sh "$SDK_FILE" arm64
            tar -zcf dist/cctools-port-${version}-arm64-linux-amd64.tar.xz -C usage_examples/ios_toolchain/target .
            rm -rf usage_examples/ios_toolchain/target
          else
            bash usage_examples/ios_toolchain/build.sh "$SDK_FILE" armv7
            tar -zcf dist/cctools-port-${version}-armv7-linux-amd64.tar.xz -C usage_examples/ios_toolchain/target .
            rm -rf usage_examples/ios_toolchain/target
            bash usage_examples/ios_toolchain/build.sh "$SDK_FILE" arm64
            tar -zcf dist/cctools-port-${version}-arm64-linux-amd64.tar.xz -C usage_examples/ios_toolchain/target .
            rm -rf usage_examples/ios_toolchain/target
          fi

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.collect_sdks.outputs.RELEASE_VERSION }}
          draft: false
          prerelease: false
          append_body: false
          fail_on_unmatched_files: true
          files: |
            dist/*
            ./*.sdk.tar.xz
